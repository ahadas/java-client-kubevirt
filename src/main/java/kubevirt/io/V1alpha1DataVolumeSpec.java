/*
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package kubevirt.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import kubevirt.io.V1PersistentVolumeClaimSpec;
import kubevirt.io.V1alpha1DataVolumeSource;

/**
 * DataVolumeSpec defines our specification for a DataVolume type
 */
@ApiModel(description = "DataVolumeSpec defines our specification for a DataVolume type")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-11-10T14:44:51.030+02:00")
public class V1alpha1DataVolumeSpec {
  @SerializedName("contentType")
  private String contentType = null;

  @SerializedName("pvc")
  private V1PersistentVolumeClaimSpec pvc = null;

  @SerializedName("source")
  private V1alpha1DataVolumeSource source = null;

  public V1alpha1DataVolumeSpec contentType(String contentType) {
    this.contentType = contentType;
    return this;
  }

   /**
   * DataVolumeContentType options: \&quot;kubevirt\&quot;, \&quot;archive\&quot;
   * @return contentType
  **/
  @ApiModelProperty(value = "DataVolumeContentType options: \"kubevirt\", \"archive\"")
  public String getContentType() {
    return contentType;
  }

  public void setContentType(String contentType) {
    this.contentType = contentType;
  }

  public V1alpha1DataVolumeSpec pvc(V1PersistentVolumeClaimSpec pvc) {
    this.pvc = pvc;
    return this;
  }

   /**
   * PVC is a pointer to the PVC Spec we want to use
   * @return pvc
  **/
  @ApiModelProperty(required = true, value = "PVC is a pointer to the PVC Spec we want to use")
  public V1PersistentVolumeClaimSpec getPvc() {
    return pvc;
  }

  public void setPvc(V1PersistentVolumeClaimSpec pvc) {
    this.pvc = pvc;
  }

  public V1alpha1DataVolumeSpec source(V1alpha1DataVolumeSource source) {
    this.source = source;
    return this;
  }

   /**
   * Source is the src of the data for the requested DataVolume
   * @return source
  **/
  @ApiModelProperty(required = true, value = "Source is the src of the data for the requested DataVolume")
  public V1alpha1DataVolumeSource getSource() {
    return source;
  }

  public void setSource(V1alpha1DataVolumeSource source) {
    this.source = source;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1DataVolumeSpec v1alpha1DataVolumeSpec = (V1alpha1DataVolumeSpec) o;
    return Objects.equals(this.contentType, v1alpha1DataVolumeSpec.contentType) &&
        Objects.equals(this.pvc, v1alpha1DataVolumeSpec.pvc) &&
        Objects.equals(this.source, v1alpha1DataVolumeSpec.source);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentType, pvc, source);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1DataVolumeSpec {\n");
    
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    pvc: ").append(toIndentedString(pvc)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

